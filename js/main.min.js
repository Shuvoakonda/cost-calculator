"use strict";

function _toConsumableArray(e) {
    return _arrayWithoutHoles(e) || _iterableToArray(e) || _nonIterableSpread()
}

function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance")
}

function _iterableToArray(e) {
    if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e)
}

function _arrayWithoutHoles(e) {
    if (Array.isArray(e)) {
        for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];
        return n
    }
}

function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var n, o, r = _objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
        var i = Object.getOwnPropertySymbols(e);
        for (o = 0; o < i.length; o++) n = i[o], 0 <= t.indexOf(n) || Object.prototype.propertyIsEnumerable.call(e, n) && (r[n] = e[n])
    }
    return r
}

function _objectWithoutPropertiesLoose(e, t) {
    if (null == e) return {};
    var n, o, r = {},
        i = Object.keys(e);
    for (o = 0; o < i.length; o++) n = i[o], 0 <= t.indexOf(n) || (r[n] = e[n]);
    return r
}

function _slicedToArray(e, t) {
    return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _nonIterableRest()
}

function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance")
}

function _iterableToArrayLimit(e, t) {
    var n = [],
        o = !0,
        r = !1,
        i = void 0;
    try {
        for (var a, c = e[Symbol.iterator](); !(o = (a = c.next()).done) && (n.push(a.value), !t || n.length !== t); o = !0);
    } catch (e) {
        r = !0, i = e
    } finally {
        try {
            o || null == c.return || c.return()
        } finally {
            if (r) throw i
        }
    }
    return n
}

function _arrayWithHoles(e) {
    if (Array.isArray(e)) return e
}
var Setup = {
        siteControl: function () {
            Vue.prototype.$device = device, Vue.component("landing-page-form", {
                data: function () {
                    return {
                        success: !1,
                        error: null,
                        pending: null
                    }
                },
                computed: {
                    hideForm: function () {
                        return this.success || this.error || this.pending
                    }
                },
                methods: {
                    sendForm: function () {
                        var e = this,
                            t = new FormData(this.$refs.form),
                            n = new XMLHttpRequest;
                        n.onreadystatechange = function () {
                            n.readyState === XMLHttpRequest.DONE && (200 === n.status ? (e.success = !0, e.$refs.form.reset()) : (console.error("Email error"), e.error = !0), e.pending = !1)
                        };
                        var o = {};
                        t.forEach(function (e, t) {
                            o[t] = e
                        });
                        var r = JSON.stringify(o),
                            i = "".concat(window.ajaxObject.ajaxUrl, "?action=landing_page_email&security=").concat(window.ajaxObject.ajaxNonce);
                        n.open("POST", i), n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.send(r), this.pending = !0
                    }
                }
            }), Vue.component("quick-call-form", {
                props: {
                    formData: {
                        type: Object,
                        required: !0
                    }
                },
                data: function () {
                    return {
                        currentSubject: null,
                        currentTopic: null,
                        success: !1,
                        error: null,
                        pending: null
                    }
                },
                computed: {
                    disabledSubjectID: function () {
                        return this.formData.disabledSubjectID
                    },
                    subjects: function () {
                        return this.formData.fields.subject_options
                    },
                    hideForm: function () {
                        return this.success || this.error
                    }
                },
                methods: {
                    subjectChanged: function () {
                        this.$emit("subject-changed")
                    },
                    sendForm: function () {
                        var t = this,
                            e = new FormData(this.$refs.form),
                            n = new XMLHttpRequest,
                            o = {};
                        n.onreadystatechange = function () {
                            if (n.readyState === XMLHttpRequest.DONE) {
                                if (200 === n.status) t.success = !0, t.$refs.form.reset();
                                else {
                                    var e = JSON.parse(n.response);
                                    console.error(e), e.data.nonce && console.warn("localized nonce: ", window.ajaxObject.ajaxNonce), t.error = !0
                                }
                                t.pending = !1
                            }
                        }, e.forEach(function (e, t) {
                            o[t] = e
                        }), o["request-type"] = this.$refs.form["request-type"].value;
                        var r = JSON.stringify(o);
                        console.log({
                            json: r
                        });
                        var i = "".concat(window.ajaxObject.ajaxUrl, "?action=form_email&security=").concat(window.ajaxObject.ajaxNonce);
                        n.open("POST", i), n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.send(r), this.pending = !0, this.sendDataLayerEvent(o)
                    },
                    cleanForm: function () {
                        this.error = this.success = null, this.currentTopic = this.subjects[0].subject_topics[0].value
                    },
                    cleanFormIfDone: function () {
                        (this.success || this.error) && this.cleanForm()
                    },
                    sendDataLayerEvent: function (e) {
                        if (window.dataLayer) {
                            var t = {
                                event: "choose insurance",
                                insurance_type: e.subject,
                                policy_type: e["request-type"]
                            };
                            window.sha1 && (t.UserId = window.sha1(e.phone)), console.log(t), window.dataLayer.push(t)
                        }
                    }
                },
                mounted: function () {
                    var t = this.formData.disabledSubjectID || this.formData.defaultSubjectID;
                    t && (this.currentSubject = this.subjects.find(function (e) {
                        return e.associated_category === t
                    }).value), this.currentTopic = this.subjects[0].subject_topics_[0].subject_topic.value, this.$nextTick(function () {
                        Setup.initInputMask()
                    })
                },
                updated: function () {
                    Setup.initInputMask()
                },
                watch: {
                    currentSubject: function () {
                        this.subjectChanged()
                    }
                }
            }), Vue.component("service-form", {
                data: function () {
                    return {
                        currentProduct: null,
                        sent: !1,
                        pending: !1,
                        error: null,
                        success: !1
                    }
                },
                methods: {
                    sendForm: function () {
                        var t = this,
                            e = new FormData(this.$refs.form),
                            n = window.ajaxObject,
                            o = n.ajaxNonce,
                            r = n.ajaxUrl,
                            i = n.post_id,
                            a = "".concat(r, "?action=service_email&security=").concat(o, "&post_id=").concat(i);
                        this.pending = !0, fetch(a, {
                            method: "POST",
                            body: e
                        }).then(function (e) {
                            t.sent = !0, t.pending = !1, e.ok ? (t.success = !0, t.resetForm()) : e.text().then(function (e) {
                                return t.errer = e
                            })
                        }).catch(function (e) {
                            t.errer = e
                        })
                    },
                    resetForm: function () {
                        this.$refs.form.reset()
                    }
                }
            }), Vue.component("filtered-list", {
                props: {
                    filters: {
                        required: !0,
                        type: Object
                    },
                    items: {
                        required: !0,
                        type: Array
                    }
                },
                data: function () {
                    return {
                        currentFilters: {},
                        textFilter: ""
                    }
                },
                computed: {
                    activeFilters: function (e) {
                        var t = e.currentFilters;
                        return Object.entries(t).filter(function (e) {
                            var t = _slicedToArray(e, 2);
                            t[0];
                            return !!t[1]
                        })
                    },
                    isUnfiltered: function (e) {
                        var t = e.activeFilters,
                            n = e.textFilter;
                        return !(t.length || n)
                    },
                    activeItems: function (e) {
                        var t = e.items,
                            m = e.activeFilters,
                            v = e.textFilter;
                        return e.isUnfiltered ? [] : t.filter(function (e) {
                            if (v) {
                                var t = !0,
                                    n = !1,
                                    o = void 0;
                                try {
                                    for (var r, i = v.split(" ")[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                        var a = r.value;
                                        if (!e.text.includes(a)) return !1
                                    }
                                } catch (e) {
                                    n = !0, o = e
                                } finally {
                                    try {
                                        t || null == i.return || i.return()
                                    } finally {
                                        if (n) throw o
                                    }
                                }
                            } else {
                                var c = !0,
                                    l = !1,
                                    s = void 0;
                                try {
                                    for (var u, d = m[Symbol.iterator](); !(c = (u = d.next()).done); c = !0) {
                                        var h = _slicedToArray(u.value, 2),
                                            f = h[0],
                                            p = h[1];
                                        if (e[f] !== p) return !1
                                    }
                                } catch (e) {
                                    l = !0, s = e
                                } finally {
                                    try {
                                        c || null == d.return || d.return()
                                    } finally {
                                        if (l) throw s
                                    }
                                }
                            }
                            return !0
                        })
                    },
                    activeItemsCount: function (e) {
                        return e.activeItems.length
                    }
                },
                methods: {
                    reset: function () {
                        this.currentFilters = {}, this.textFilter = ""
                    },
                    showItem: function (t) {
                        return this.activeItems.some(function (e) {
                            return e.key === t
                        })
                    }
                }
            });
            new Vue({
                name: "siteControl",
                el: "#site-wrapper",
                data: {
                    scroll: {
                        scrolled: !1,
                        offset: 0
                    },
                    additionalProducts: {
                        open: !1
                    },
                    quickCallPanel: {
                        open: !1,
                        mobileControlsHidden: null
                    },
                    mobileNav: {
                        open: !1
                    },
                    people: {
                        allDepartmentsID: !1,
                        currentDepartmentID: !1,
                        departments: {}
                    },
                    showingBanner: !0
                },
                computed: {
                    scrolled: function () {
                        return this.scroll.scrolled
                    },
                    mobileNavOpen: function () {
                        return this.mobileNav.open
                    },
                    quickCallPanelOpen: function () {
                        return this.quickCallPanel.open
                    },
                    currentDepartmentLabel: function () {
                        return this.people.departments[this.people.currentDepartmentID] ? this.people.departments[this.people.currentDepartmentID].label : ""
                    },
                    quickCallControlsHidden: function () {
                        return !0 !== this.mobileNavOpen && (null !== this.quickCallPanel.mobileControlsHidden ? this.quickCallPanel.mobileControlsHidden : this.scrolled)
                    },
                    lockScroll: function () {
                        return !this.$device.desktop() && (this.mobileNavOpen || this.quickCallPanelOpen)
                    }
                },
                methods: {
                    setScrolled: function () {
                        this.scroll.scrolled = (window.scrollY || window.pageYOffset) > this.scroll.offset
                    },
                    closePanels: function (e) {
                        e.srcElement.closest(".site-header") || (this.additionalProducts.open && (this.additionalProducts.open = !1), this.quickCallPanel.open && (this.toggleQuickCallPanel(!1), this.$refs["header-panel"].cleanFormIfDone()), this.mobileNav.open && this.toggleMobileNav(!1))
                    },
                    initPanelSize: function () {
                        var e = this.$el.querySelector(".panel");
                        e.style.setProperty("--button-width", this.$el.querySelector(".contact-action-wrapper").clientWidth + "px"), e.style.setProperty("--button-height", this.$el.querySelector(".contact-action-wrapper").clientHeight + "px"), e.style.setProperty("--panel-height", e.scrollHeight + "px")
                    },
                    initScrollThreshold: function () {
                        var e = document.querySelector("[data-scroll-threshold]");
                        if (e && this.$device.desktop()) {
                            var t = e.getAttribute("data-scroll-threshold") || "top",
                                n = document.querySelector("#site-header").clientHeight + 72,
                                o = (window.scrollY || window.pageYOffset) + e.getBoundingClientRect()[t];
                            this.scroll.offset = o - n
                        }
                    },
                    initAllDepartments: function () {
                        var e = document.getElementById("all-departments");
                        e && (this.people.currentDepartmentID = this.people.allDepartmentsID = e.getAttribute("data-department"))
                    },
                    hiddenDepartment: function (e) {
                        return this.people.currentDepartmentID !== this.people.allDepartmentsID && this.people.currentDepartmentID !== e
                    },
                    setCurrentDepartment: function (e) {
                        this.people.currentDepartmentID = e;
                        var t = document.querySelector(".people-container main");
                        scrollToTarget(t, {
                            top: !0,
                            bottom: !1
                        })
                    },
                    toggleMobileNav: function (e) {
                        this.mobileNav.open = "boolean" == typeof e ? e : !this.mobileNav.open, this.quickCallPanel.open && this.mobileNav.open && this.toggleQuickCallPanel()
                    },
                    toggleQuickCallControls: function () {
                        null !== this.quickCallPanel.mobileControlsHidden ? this.quickCallPanel.mobileControlsHidden = !this.quickCallPanel.mobileControlsHidden : this.quickCallPanel.mobileControlsHidden = !1
                    },
                    toggleQuickCallPanel: function (e) {
                        this.quickCallPanel.open = "boolean" == typeof e ? e : !this.quickCallPanel.open, this.quickCallPanel.open && this.mobileNav.open && this.toggleMobileNav(), document.getElementById("contact-actions-toggle").checked = !1
                    },
                    resizePanel: function () {
                        var e = this.$el.querySelector(".panel"),
                            t = e.querySelector(".content"),
                            n = 1e3 * parseFloat(getComputedStyle(e).transitionDelay.split(",")[2]);
                        e.classList.add("no-delay"), this.$nextTick(function () {
                            e.style.setProperty("--panel-height", t.scrollHeight + "px"), setTimeout(function () {
                                e.classList.remove("no-delay")
                            }, n)
                        })
                    },
                    setLockScroll: function (e, t) {
                        e ? window.bodyScrollLock.disableBodyScroll(t) : window.bodyScrollLock.clearAllBodyScrollLocks()
                    },
                    closeBanner: function () {
                        this.showingBanner = !1;
                        document.cookie = "banner_closed=1;max-age=".concat(86400, ";path=/")
                    }
                },
                mounted: function () {
                    var e = this;
                    this.initScrollThreshold(), windowListeners.click.push(this.closePanels), this.setScrolled(), windowListeners.scroll.push(this.setScrolled), this.initPanelSize(), this.initAllDepartments(), window.addEventListener("hashClicked", function () {
                        return e.toggleMobileNav(!1)
                    })
                },
                watch: {
                    scrolled: function (e) {
                        e || (this.additionalProducts.open = !1), document.body.dataset.scrolled = e
                    },
                    mobileNavOpen: function (e) {
                        this.setLockScroll(e, document.getElementById("site-nav-container"))
                    },
                    quickCallPanelOpen: function (e) {
                        this.setLockScroll(e, document.getElementById("quick-call-panel"))
                    }
                },
                directives: {
                    department: {
                        inserted: function (e, t, n) {
                            var o = n.context,
                                r = t.value,
                                i = (r.id, _objectWithoutProperties(r, ["id"]));
                            o.people.departments[t.value.id] = i
                        }
                    }
                }
            })
        },
        scrollHeight: function () {
            var e = function () {
                document.querySelectorAll("[data-scroll-height]").forEach(function (e) {
                    var t = e.getAttribute("data-scroll-height"),
                        n = t ? e.querySelector(t) : e;
                    e.style.setProperty("--scroll-height", n.scrollHeight + "px")
                })
            };
            e(), windowListeners.resize.push(e), window.setWindowHeight();
            var t = navigator.userAgent.toLowerCase();
            (window.device.tablet() || t.match(/mac/g) && !t.match(/phone/g)) && windowListeners.orientationchange.push(window.setWindowHeight)
        },
        setListeners: function () {
            var e = function (n) {
                window.addEventListener(n, function () {
                    var e = windowListeners[n];
                    for (var t in e) e.hasOwnProperty(t) && e[t](event)
                })
            };
            for (var t in windowListeners) e(t)
        },
        hashScroll: function () {
            var r = function (e) {
                if (e.hasAttribute("data-anchor-toggle")) {
                    var t = e.querySelector("[type=checkbox]") || e;
                    t && (t.checked = !0)
                }
            };
            if (windowListeners.click.push(function (e) {
                    var t = e.target,
                        n = t.matches("a") ? t : t.closest("a");
                    n && 0 === n.getAttribute("href").indexOf("#") && (e.preventDefault(), window.dispatchEvent(new Event("hashClicked")), function (e) {
                        if ("#" === e) window.scrollTo({
                            behavior: "smooth",
                            top: 0
                        });
                        else {
                            var t = document.querySelector(e);
                            t ? scrollToTarget(t) : location.assign("".concat(location.protocol, "//").concat(location.hostname, "/").concat(e));
                            var n = e.replace("#", ""),
                                o = document.getElementById(n);
                            r(o)
                        }
                    }(n.getAttribute("href")))
                }), location.hash) {
                var e = document.getElementById(location.hash.replace("#", ""));
                scrollToTarget(e), r(e)
            }
        },
        initHorizontalScroll: function () {
            document.querySelectorAll("[data-horizontal-scroll]").forEach(function (n) {
                n.addEventListener("wheel", function (e) {
                    e.preventDefault();
                    var t = 2 * parseFloat(getComputedStyle(n.firstChild).marginRight);
                    n.scrollWidth > n.clientWidth + t && (n.scrollLeft -= e.deltaY)
                })
            })
        },
        initInputMask: function () {
            Inputmask.extendDefaults({
                jitMasking: !0,
                clearMaskOnLostFocus: !0
            }), Inputmask().mask(document.querySelectorAll("input"))
        },
        dataSrc: function () {
            setTimeout(function () {
                document.querySelectorAll("[data-src]").forEach(function (e) {
                    e.setAttribute("src", e.getAttribute("data-src")), e.removeAttribute("data-src")
                })
            }, 5e3)
        },
        linkParams: function () {

            if (!getCookie("params") && (window.location.search || document.referrer)) {
                var t = window.location.search ? window.location.search + "&referrer=".concat(encodeURI(document.referrer)) : "?referrer=".concat(encodeURI(document.referrer));
                setCookie("params", t, 10);
            }
            if (getCookie("params")) {
                console.log(getCookie("params"));
                var n = (getCookie("params"));
                if (n) {
                    var o = n.replace("?", "");
                    document.querySelectorAll("[data-attach-params]:not(.attached)").forEach(function (e) {
                        var t = -1 !== e.href.indexOf("?") ? "&" : "?";
                        t += o, e.href += t;
                        e.className += ' attached';
                    })
                } else eraseCookie("params")
            }
        },
        slideshow: function () {
            var h = "data-slide",
                f = "data-control",
                p = ["click"],
                m = function (e, t, n, o) {
                    var r = n.htmlFor;
                    if (r) {
                        var i = document.getElementById(r);
                        i && (i.checked = !0)
                    }
                },
                e = document.querySelectorAll("[".concat("data-slideshow", "]"));
            e && e.forEach(function (e) {
                var o, t = e.querySelectorAll("[".concat(h, "]")),
                    n = e.querySelectorAll("[".concat(f, "]")),
                    r = Math.max.apply(Math, _toConsumableArray(_toConsumableArray(t).map(function (e) {
                        return parseInt(e.getAttribute(h))
                    }))) || t.length,
                    i = i || parseInt(e.getAttribute("data-slideshow-timer")) || null,
                    a = a || parseInt(e.getAttribute("data-slideshow-timer-restart")) || null,
                    c = _toConsumableArray(t).findIndex(function (e) {
                        return e.classList.contains("active")
                    }); - 1 === c && (c = 0);
                var l = function () {
                        return c === r ? 1 : c + 1
                    },
                    s = function (e, t) {
                        var n = parseInt(e.getAttribute(t));
                        if (e.classList.toggle("active", n === c), i) {
                            e.classList.toggle("next", n === l()), e.classList.toggle("prev", n === (1 === c ? r : c - 1));
                            var o = 0 <= n - c ? n - c : r + n - c;
                            e.dataset.activeIn = "".concat(o), e.dataset.activeAgo = "".concat(0 === o ? 0 : r - o)
                        }
                    },
                    u = function (e) {
                        c = e || l(), t.forEach(function (e) {
                            s(e, h)
                        }), n.forEach(function (e) {
                            s(e, f)
                        }), m(0, t[c - 1], n[c - 1])
                    },
                    d = function () {
                        "number" == typeof i && (o = setInterval(u, i), e.classList.add("with-timer"))
                    };
                d(), n.forEach(function (t) {
                    var n = function () {
                        o && (clearInterval(o), o = null, e.classList.remove("with-timer"), a && setTimeout(d, a)), u(parseInt(t.getAttribute(f)))
                    };
                    p.forEach(function (e) {
                        t.addEventListener(e, n)
                    })
                }), u(c)
            })
        },
        careersForm: function () {
            document.querySelectorAll("[data-careers-form]").forEach(function (o) {
                var r = o.parentElement.querySelector("[data-response]");
                o.addEventListener("submit", function (e) {
                    e.preventDefault(), o.classList.add("pending");
                    var t = new FormData(e.target);
                    t.append("Position", o.dataset.careersForm);
                    var n = "".concat(window.ajaxObject.ajaxUrl, "?action=careers_email&security=").concat(window.ajaxObject.ajaxNonce);
                    fetch(n, {
                        method: "POST",
                        body: t
                    }).then(function (e) {
                        e.ok ? (o.classList.add("hidden"), r.innerHTML = window.careersSuccess || "") : (r.innerHTML = window.careersError || "", e.json().then(function (e) {
                            console.warn(e)
                        }));
                        let parent = r.closest('.additional-info-panel');
                        window.dataLayer = window.dataLayer || [];
                        window.dataLayer.push({
                            'event': 'cv-submit',
                            'position-id': parent.dataset.id
                        });
                    }).catch(function (e) {
                        console.warn(e), r.innerHTML = window.careersError || ""
                    }).finally(function () {
                        o.classList.remove("pending")
                    })
                })
            })
        },
        fileInputs: function () {
            document.querySelectorAll("[type=file]").forEach(function (t) {
                var n = t.parentElement.querySelector("[data-file-preview]"),
                    o = n.textContent;
                t.addEventListener("change", function () {
                    var e = t.files;
                    n.innerHTML = e ? _toConsumableArray(e).map(function (e) {
                        return e.name
                    }).join("<br>") : o
                })
            })
        },
        notifications: function () {
            window.setNotificationCookie = function () {
                var t = "notification_closed",
                    e = document.cookie.replace(/ /gi, "").split(";").find(function (e) {
                        return e.startsWith(t)
                    });
                if (e) {
                    var n = e.split("=")[1];
                    console.log({
                        stringValue: n
                    });
                    var o = parseInt(n);
                    console.log({
                        value: o
                    }), o && (document.cookie = "".concat(t, "=").concat(o + 1, ";path=/"))
                } else document.cookie = "".concat(t, "=1;path=/")
            }, window.closeSiteNotification = function () {
                setNotificationCookie(), document.getElementById("site-notification-popup-container").remove()
            }
        }
    },
    scrollToTarget = function (n) {
        var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
                top: !0,
                bottom: !0
            },
            t = document.querySelector("#site-header").clientHeight,
            o = window.scrollY || window.pageYOffset,
            r = n.getBoundingClientRect().top + o - t - 150;
        (e.top && r < o || e.bottom && o < r) && (window.scrollTo({
            behavior: "smooth",
            top: r
        }), setTimeout(function () {
            var e = n.id,
                t = document.getElementById(e);
            t.setAttribute("id", ""), location.hash = e, setTimeout(function () {
                t.setAttribute("id", e);
                jQuery("#" + e).click();
                console.log("ff");

            }, 950)
        }, 550))
    },
    windowListeners = {
        resize: [],
        scroll: [],
        click: [],
        orientationchange: []
    };
for (var fn in Setup) Setup[fn]();

function close_other_faqs(except_element) {
    document.querySelectorAll(".faq-list input[type='checkbox']").forEach(function (val, index, arr) {
        if (arr[index].id != except_element) {
            arr[index].checked = false;
        }
    });
}

jQuery(document).ready(function () {
    jQuery("body").addClass("page-ready");

    jQuery("#downloads .field.select-field").each(function () {
        var $cont = jQuery(this);
        var $html = '<div class="v2--select"><div class="v2--select-title"></div>';
        jQuery(this).find("select").each(function () {
            var $select = jQuery(this);
            $html += '<div class="v2--options">';
            $select.find("option").each(function () {
                var $option = jQuery(this);
                var $icon = ($option.attr("data-icon") ? '<img src="' + $option.attr("data-icon") + '" />' : "");
                if ($option.text()) {
                    $html += '<div class="v2--option" data-value="' + $option.text() + '">' + $icon + '' + $option.text() + '</div>';

                }

            });
            $html += '</div>';
        });
        $html += '</div>';

        $cont.append($html);


        $cont.find(".v2--select .v2--option").on("click", function (e) {
            var $t = jQuery(this);

            jQuery(this).closest(".v2--select").find(".v2--select-title").html($t.text());
            jQuery(this).closest(".v2--options").slideUp();
            $cont.closest(".field").find("select").val($t.attr("data-value"));
            $cont.closest(".field").find("select").trigger("change");
            js_change("#" + $t.closest(".field").find("select").attr("id"), $t.attr("data-value"))

            e.stopPropagation();

        });


        $cont.find(".v2--select").on("click", function () {
            jQuery(this).closest(".field").find(".v2--options").slideToggle();
        });

        jQuery("section.service-downloads .filter header button").on("click", function () {
            jQuery(".v2--select-title").html("");
        });

        jQuery("body").click(function (e) {
            if (jQuery(e.target).closest(".v2--select").length || jQuery(e.target).hasClass("v2--select")) {

                var $cont = (jQuery(e.target).closest(".v2--select").length) ? jQuery(e.target).closest(".v2--select") : jQuery(e.target);
                jQuery(".v2--select").not($cont).find(".v2--options").slideUp();

            } else {
                jQuery(".v2--select").find(".v2--options").slideUp();
            }
        });

        if (jQuery("#garages-carousel").length) {
            jQuery("#garages-carousel").owlCarousel({
                items: 3,
                nav: true,
                dots: false,
                margin: 0,
                autoplay: false,
                rtl: true,
                autoplayTimeout: 6000,
                navText: ['<span class="carousel-right"><img src="/wp-content/themes/wobi-theme/assets/img/arrow-large-blue.svg" alt="" title="" /></span>', '<span class="carousel-left"><img src="/wp-content/themes/wobi-theme/assets/img/arrow-large-blue.svg" alt="" title="" /></span>'],
                autoplayHoverPause: false,
                loop: true,
                center: true,
                responsive: {

                    0: {
                        items: 1
                    },
                    670: {
                        items: 2
                    },
                    1000: {
                        items: 5
                    }
                }
            });


        }
        jQuery(".garages-item").on("mouseenter", function () {
            jQuery(this).addClass("open");
            jQuery(this).find(".garages-item-links").fadeIn();
        });
        jQuery(".garages-item").on("mouseleave", function (e) {
            e.stopImmediatePropagation();
            jQuery(this).removeClass("open");
            jQuery(this).find(".garages-item-links").fadeOut();
        });

    })

    setTimeout(function () {
        jQuery('[data-value="׳‘׳™׳˜׳•׳— ׳¨׳›׳‘"]').click();
        jQuery('[data-value="׳‘׳™׳˜׳•׳"]').click();
    }, 1000);
});



function js_change(selector, value) {
    var sortBySelect = document.querySelector(selector);
    sortBySelect.value = value;
    sortBySelect.dispatchEvent(new Event("change"));
}

function js_click(selector) {
    var sortBySelect = document.querySelector(selector);
    sortBySelect.dispatchEvent(new Event("click"));
}

//# sourceMappingURL=main.min.js.map